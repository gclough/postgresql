# file: postgresql/tasks/install_yum.yml

# The standard ca-certs are needed because  without them apt_key will fail to
# validate www.postgresql.org (or probably any other source).

  - block:
      - name: PostgreSQL | Make sure the CA certificates are available
        yum:
          name: ca-certificates
          state: present

      - name: PostgreSQL | Add PostgreSQL repository
        yum:
          name: "{{ postgresql_yum_repository_url }}"
          state: present

      - name: PostgreSQL | Make sure the dependencies are installed
        yum:
         name: "{{ item }}"
         state: present
         update_cache: yes
        with_items: ["python-psycopg2", "python-pycurl", "glibc-common"]

      - name: PostgreSQL | Install PostgreSQL
        yum:
          name: "{{ item }}"
          state: present
        environment: "{{ postgresql_env }}"
        with_items:
          - "postgresql{{ postgresql_version_terse }}-server"
          - "postgresql{{ postgresql_version_terse }}"
          - "postgresql{{ postgresql_version_terse }}-contrib"

      - name: PostgreSQL | Setup service users profile
        template:
          src: pgsql_profile.j2
          dest: "~{{ postgresql_service_user }}/.pgsql_profile"
          owner: "{{ postgresql_service_user }}"
          group: "{{ postgresql_service_group }}"
          mode: 0700

      - name: PostgreSQL | Create ~/pgtab.example
        template:
          src: pgtab.j2
          dest: "~{{ postgresql_service_user }}/pgtab.example"
          owner: "{{ postgresql_service_user }}"
          group: "{{ postgresql_service_group }}"
          mode: 0644

      - name: PostgreSQL | Create ~/pgtab header
        lineinfile:
          path: "~{{ postgresql_service_user }}/pgtab"
          owner: "{{ postgresql_service_user }}"
          group: "{{ postgresql_service_group }}"
          mode: 0644
          create: yes
          insertbefore: BOF
          regexp: "^#  pgclustername :.*$"
          line: "#  pgclustername : pgtabversion : pgrelease : pgport : pgdatabase : pgroot : pgbindir : [pgdata] : [pgwalarch] : [pgbackups]"

      - name: PostgreSQL | Create ~/pgtab Ansible warning
        lineinfile:
          path: "~{{ postgresql_service_user }}/pgtab"
          owner: "{{ postgresql_service_user }}"
          group: "{{ postgresql_service_group }}"
          mode: 0644
          insertbefore: BOF
          regexp: "^#  NOTICE: This file is managed by Ansible. Do not modify it.$"
          line: "#  NOTICE: This file is managed by Ansible. Do not modify it."

      - name: PostgreSQL | Add database to ~/pgtab
        lineinfile:
          path: "~{{ postgresql_service_user }}/pgtab"
          owner: "{{ postgresql_service_user }}"
          group: "{{ postgresql_service_group }}"
          mode: 0644
          regexp: "{{ postgresql_cluster_name }}:.*$"
          line: "{{ postgresql_cluster_name }}:1:{{ postgresql_version }}:{{ postgresql_port }}:{{ postgresql_service_user }}:/var/lib/pgsql:/usr/pgsql-{{ postgresql_version }}/bin:{{ postgresql_data_directory }}:::"

      - name: PostgreSQL | PGTune
        yum:
          name: pgtune
          state: present
        environment: "{{ postgresql_env }}"
        when: postgresql_pgtune

      - name: PostgreSQL | Install Python pip installer | yum
        yum:
          name: "{{ postgresql_yum_pip_package }}"
          state: present
        when: postgresql_ssl and
              ansible_distribution_major_version | version_compare('7','>=')

      - name: PostgreSQL | Install pyOpenSSL | yum | pip
        pip:
          name: pyopenssl
          state: present
        when: postgresql_ssl and
              ansible_distribution_major_version | version_compare('7','>=')
